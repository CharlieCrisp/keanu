plugins {
    id 'application'
    id 'io.franzbecker.gradle-lombok' version '1.14'
}

mainClassName = 'io.improbable.keanu.codegen.python.Runner'

dependencies {
    compile 'org.reflections:reflections:0.9.11'
    compile 'org.freemarker:freemarker:2.3.28'
    compile project(':keanu-project')
    compile files("${System.getProperty('java.home')}/../lib/tools.jar")

    //testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

task saveJavadocStringsToFile(type: Javadoc) {
    def keanuProject = rootProject.subprojects.find { subproject -> subproject.name == "keanu-project" }

    source = keanuProject.layout.getProjectDirectory().asFileTree.matching({ filter -> filter.include("**/*.java") })

    println layout.projectDirectory.get().path + "/build/classes/java/main"
    File classFile = new File(layout.projectDirectory.get().path + "/build/classes/java/main")

    def docletClasspath = rootProject.compileJava.classpath.files.toList()
    docletClasspath.add(classFile)
    options.setDocletpath(docletClasspath)
    options.setDoclet("io.improbable.keanu.codegen.python.KeanuProjectDoclet")

    def mainClasspath = keanuProject.layout.projectDirectory.asFileTree.files.toList()
    options.setClasspath(mainClasspath)
}

task codeGen (type: JavaExec) {
    dependsOn saveJavadocStringsToFile
    classpath sourceSets.main.runtimeClasspath
    main = mainClassName
    args += project.rootDir.toString() + '/keanu-python/keanu/vertex/'
}

lombok { // optional: values below are the defaults
    version = "1.16.20"
    sha256 = ""
}