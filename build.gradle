plugins {
    id 'com.palantir.git-version' version '0.11.0'
    id 'com.github.johnrengelman.shadow' version '2.0.2'
    id "com.diffplug.gradle.spotless" version "3.15.0"
}

apply from: "gradle/spotless.gradle"

allprojects {
    version gitVersion()

    apply plugin: "java"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    group = "io.improbable"
}

dependencies {
    compile 'com.google.code.gson:gson:2.7'
    compile project(":keanu-project")
}

shadowJar {
    destinationDir = file("$rootDir/keanu-python/keanu")
    archiveName = "keanu-python-all.jar"
}

task saveJavadocStringsToFile(type: Javadoc) {
    def keanuProject = rootProject.subprojects.find { subproject -> subproject.name == "keanu-project" }
    def codegenProject = rootProject.subprojects.find { subproject -> subproject.name == "codegen" }
    dependsOn "codegen:compileJava"

    source = keanuProject.layout.getProjectDirectory().asFileTree.matching({ filter -> filter.include("**/*.java") })

    File classFile = new File(codegenProject.layout.projectDirectory.get().path + "/build/classes/java/main")

    def docletClasspath = compileJava.classpath.files.toList()
    docletClasspath.add(classFile)
    options.setDocletpath(docletClasspath)
    options.setDoclet("io.improbable.keanu.codegen.python.KeanuProjectDoclet")

    def mainClasspath = keanuProject.layout.projectDirectory.asFileTree.files.toList()
    options.setClasspath(mainClasspath)
}
